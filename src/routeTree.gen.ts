/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as ResidentSubmitRequestImport } from './routes/resident/submit-request'
import { Route as ResidentContactImport } from './routes/resident/contact'
import { Route as AuthDashboardImport } from './routes/_auth/dashboard'

// Create Virtual Routes

const ResidentRouteLazyImport = createFileRoute('/resident')()
const ResidentProfileLazyImport = createFileRoute('/resident/profile')()
const ResidentPaynowLazyImport = createFileRoute('/resident/paynow')()
const ResidentNoticesLazyImport = createFileRoute('/resident/notices')()
const ResidentInquiriesLazyImport = createFileRoute('/resident/inquiries')()
const ResidentFinancialLazyImport = createFileRoute('/resident/financial')()
const ResidentEditProfileLazyImport = createFileRoute(
  '/resident/edit-profile',
)()
const ResidentDashboardLazyImport = createFileRoute('/resident/dashboard')()
const ResidentAccountLazyImport = createFileRoute('/resident/account')()

// Create/Update Routes

const ResidentRouteLazyRoute = ResidentRouteLazyImport.update({
  id: '/resident',
  path: '/resident',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/resident/route.lazy').then((d) => d.Route),
)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ResidentProfileLazyRoute = ResidentProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/profile.lazy').then((d) => d.Route),
)

const ResidentPaynowLazyRoute = ResidentPaynowLazyImport.update({
  id: '/paynow',
  path: '/paynow',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/paynow.lazy').then((d) => d.Route),
)

const ResidentNoticesLazyRoute = ResidentNoticesLazyImport.update({
  id: '/notices',
  path: '/notices',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/notices.lazy').then((d) => d.Route),
)

const ResidentInquiriesLazyRoute = ResidentInquiriesLazyImport.update({
  id: '/inquiries',
  path: '/inquiries',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/inquiries.lazy').then((d) => d.Route),
)

const ResidentFinancialLazyRoute = ResidentFinancialLazyImport.update({
  id: '/financial',
  path: '/financial',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/financial.lazy').then((d) => d.Route),
)

const ResidentEditProfileLazyRoute = ResidentEditProfileLazyImport.update({
  id: '/edit-profile',
  path: '/edit-profile',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/edit-profile.lazy').then((d) => d.Route),
)

const ResidentDashboardLazyRoute = ResidentDashboardLazyImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/dashboard.lazy').then((d) => d.Route),
)

const ResidentAccountLazyRoute = ResidentAccountLazyImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/account.lazy').then((d) => d.Route),
)

const ResidentSubmitRequestRoute = ResidentSubmitRequestImport.update({
  id: '/submit-request',
  path: '/submit-request',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any)

const ResidentContactRoute = ResidentContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any)

const AuthDashboardRoute = AuthDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/resident': {
      id: '/resident'
      path: '/resident'
      fullPath: '/resident'
      preLoaderRoute: typeof ResidentRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardImport
      parentRoute: typeof AuthRouteImport
    }
    '/resident/contact': {
      id: '/resident/contact'
      path: '/contact'
      fullPath: '/resident/contact'
      preLoaderRoute: typeof ResidentContactImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/submit-request': {
      id: '/resident/submit-request'
      path: '/submit-request'
      fullPath: '/resident/submit-request'
      preLoaderRoute: typeof ResidentSubmitRequestImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/account': {
      id: '/resident/account'
      path: '/account'
      fullPath: '/resident/account'
      preLoaderRoute: typeof ResidentAccountLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/dashboard': {
      id: '/resident/dashboard'
      path: '/dashboard'
      fullPath: '/resident/dashboard'
      preLoaderRoute: typeof ResidentDashboardLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/edit-profile': {
      id: '/resident/edit-profile'
      path: '/edit-profile'
      fullPath: '/resident/edit-profile'
      preLoaderRoute: typeof ResidentEditProfileLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/financial': {
      id: '/resident/financial'
      path: '/financial'
      fullPath: '/resident/financial'
      preLoaderRoute: typeof ResidentFinancialLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/inquiries': {
      id: '/resident/inquiries'
      path: '/inquiries'
      fullPath: '/resident/inquiries'
      preLoaderRoute: typeof ResidentInquiriesLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/notices': {
      id: '/resident/notices'
      path: '/notices'
      fullPath: '/resident/notices'
      preLoaderRoute: typeof ResidentNoticesLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/paynow': {
      id: '/resident/paynow'
      path: '/paynow'
      fullPath: '/resident/paynow'
      preLoaderRoute: typeof ResidentPaynowLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/profile': {
      id: '/resident/profile'
      path: '/profile'
      fullPath: '/resident/profile'
      preLoaderRoute: typeof ResidentProfileLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthDashboardRoute: AuthDashboardRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface ResidentRouteLazyRouteChildren {
  ResidentContactRoute: typeof ResidentContactRoute
  ResidentSubmitRequestRoute: typeof ResidentSubmitRequestRoute
  ResidentAccountLazyRoute: typeof ResidentAccountLazyRoute
  ResidentDashboardLazyRoute: typeof ResidentDashboardLazyRoute
  ResidentEditProfileLazyRoute: typeof ResidentEditProfileLazyRoute
  ResidentFinancialLazyRoute: typeof ResidentFinancialLazyRoute
  ResidentInquiriesLazyRoute: typeof ResidentInquiriesLazyRoute
  ResidentNoticesLazyRoute: typeof ResidentNoticesLazyRoute
  ResidentPaynowLazyRoute: typeof ResidentPaynowLazyRoute
  ResidentProfileLazyRoute: typeof ResidentProfileLazyRoute
}

const ResidentRouteLazyRouteChildren: ResidentRouteLazyRouteChildren = {
  ResidentContactRoute: ResidentContactRoute,
  ResidentSubmitRequestRoute: ResidentSubmitRequestRoute,
  ResidentAccountLazyRoute: ResidentAccountLazyRoute,
  ResidentDashboardLazyRoute: ResidentDashboardLazyRoute,
  ResidentEditProfileLazyRoute: ResidentEditProfileLazyRoute,
  ResidentFinancialLazyRoute: ResidentFinancialLazyRoute,
  ResidentInquiriesLazyRoute: ResidentInquiriesLazyRoute,
  ResidentNoticesLazyRoute: ResidentNoticesLazyRoute,
  ResidentPaynowLazyRoute: ResidentPaynowLazyRoute,
  ResidentProfileLazyRoute: ResidentProfileLazyRoute,
}

const ResidentRouteLazyRouteWithChildren =
  ResidentRouteLazyRoute._addFileChildren(ResidentRouteLazyRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/resident': typeof ResidentRouteLazyRouteWithChildren
  '/dashboard': typeof AuthDashboardRoute
  '/resident/contact': typeof ResidentContactRoute
  '/resident/submit-request': typeof ResidentSubmitRequestRoute
  '/resident/account': typeof ResidentAccountLazyRoute
  '/resident/dashboard': typeof ResidentDashboardLazyRoute
  '/resident/edit-profile': typeof ResidentEditProfileLazyRoute
  '/resident/financial': typeof ResidentFinancialLazyRoute
  '/resident/inquiries': typeof ResidentInquiriesLazyRoute
  '/resident/notices': typeof ResidentNoticesLazyRoute
  '/resident/paynow': typeof ResidentPaynowLazyRoute
  '/resident/profile': typeof ResidentProfileLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/resident': typeof ResidentRouteLazyRouteWithChildren
  '/dashboard': typeof AuthDashboardRoute
  '/resident/contact': typeof ResidentContactRoute
  '/resident/submit-request': typeof ResidentSubmitRequestRoute
  '/resident/account': typeof ResidentAccountLazyRoute
  '/resident/dashboard': typeof ResidentDashboardLazyRoute
  '/resident/edit-profile': typeof ResidentEditProfileLazyRoute
  '/resident/financial': typeof ResidentFinancialLazyRoute
  '/resident/inquiries': typeof ResidentInquiriesLazyRoute
  '/resident/notices': typeof ResidentNoticesLazyRoute
  '/resident/paynow': typeof ResidentPaynowLazyRoute
  '/resident/profile': typeof ResidentProfileLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/resident': typeof ResidentRouteLazyRouteWithChildren
  '/_auth/dashboard': typeof AuthDashboardRoute
  '/resident/contact': typeof ResidentContactRoute
  '/resident/submit-request': typeof ResidentSubmitRequestRoute
  '/resident/account': typeof ResidentAccountLazyRoute
  '/resident/dashboard': typeof ResidentDashboardLazyRoute
  '/resident/edit-profile': typeof ResidentEditProfileLazyRoute
  '/resident/financial': typeof ResidentFinancialLazyRoute
  '/resident/inquiries': typeof ResidentInquiriesLazyRoute
  '/resident/notices': typeof ResidentNoticesLazyRoute
  '/resident/paynow': typeof ResidentPaynowLazyRoute
  '/resident/profile': typeof ResidentProfileLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/resident'
    | '/dashboard'
    | '/resident/contact'
    | '/resident/submit-request'
    | '/resident/account'
    | '/resident/dashboard'
    | '/resident/edit-profile'
    | '/resident/financial'
    | '/resident/inquiries'
    | '/resident/notices'
    | '/resident/paynow'
    | '/resident/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/resident'
    | '/dashboard'
    | '/resident/contact'
    | '/resident/submit-request'
    | '/resident/account'
    | '/resident/dashboard'
    | '/resident/edit-profile'
    | '/resident/financial'
    | '/resident/inquiries'
    | '/resident/notices'
    | '/resident/paynow'
    | '/resident/profile'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/login'
    | '/resident'
    | '/_auth/dashboard'
    | '/resident/contact'
    | '/resident/submit-request'
    | '/resident/account'
    | '/resident/dashboard'
    | '/resident/edit-profile'
    | '/resident/financial'
    | '/resident/inquiries'
    | '/resident/notices'
    | '/resident/paynow'
    | '/resident/profile'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  ResidentRouteLazyRoute: typeof ResidentRouteLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  ResidentRouteLazyRoute: ResidentRouteLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login",
        "/resident"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/dashboard"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/resident": {
      "filePath": "resident/route.lazy.tsx",
      "children": [
        "/resident/contact",
        "/resident/submit-request",
        "/resident/account",
        "/resident/dashboard",
        "/resident/edit-profile",
        "/resident/financial",
        "/resident/inquiries",
        "/resident/notices",
        "/resident/paynow",
        "/resident/profile"
      ]
    },
    "/_auth/dashboard": {
      "filePath": "_auth/dashboard.tsx",
      "parent": "/_auth"
    },
    "/resident/contact": {
      "filePath": "resident/contact.tsx",
      "parent": "/resident"
    },
    "/resident/submit-request": {
      "filePath": "resident/submit-request.tsx",
      "parent": "/resident"
    },
    "/resident/account": {
      "filePath": "resident/account.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/dashboard": {
      "filePath": "resident/dashboard.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/edit-profile": {
      "filePath": "resident/edit-profile.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/financial": {
      "filePath": "resident/financial.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/inquiries": {
      "filePath": "resident/inquiries.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/notices": {
      "filePath": "resident/notices.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/paynow": {
      "filePath": "resident/paynow.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/profile": {
      "filePath": "resident/profile.lazy.tsx",
      "parent": "/resident"
    }
  }
}
ROUTE_MANIFEST_END */
