/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AdminRouteImport } from './routes/admin/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as AdminIndexImport } from './routes/admin/index'
import { Route as ResidentSubmitRequestImport } from './routes/resident/submit-request'
import { Route as ResidentContactImport } from './routes/resident/contact'
import { Route as AdminUnpaidAccountsImport } from './routes/admin/unpaid-accounts'
import { Route as AdminProfileImport } from './routes/admin/profile'
import { Route as AdminNotificationsImport } from './routes/admin/notifications'
import { Route as AdminEmployeesImport } from './routes/admin/employees'
import { Route as AdminEditProfileImport } from './routes/admin/edit-profile'
import { Route as AdminAddResidentImport } from './routes/admin/add-resident'
import { Route as AdminAccountImport } from './routes/admin/account'
import { Route as AuthDashboardImport } from './routes/_auth/dashboard'
import { Route as AdminResidentRouteImport } from './routes/admin/resident/route'
import { Route as AdminResidentIndexImport } from './routes/admin/resident/index'
import { Route as AdminResidentAddResidentImport } from './routes/admin/resident/add-resident'
import { Route as AdminFinancialFinancialImport } from './routes/admin/financial/_financial'
import { Route as AdminResidentResidentIdRouteImport } from './routes/admin/resident/$residentId/route'
import { Route as AdminResidentResidentIdEditImport } from './routes/admin/resident/$residentId/edit'
import { Route as AdminFinancialFinancialRecordsImport } from './routes/admin/financial/_financial.records'
import { Route as AdminFinancialFinancialMonthlyDueImport } from './routes/admin/financial/_financial.monthly-due'
import { Route as AdminResidentResidentIdViewRouteImport } from './routes/admin/resident/$residentId/_view/route'
import { Route as AdminResidentResidentIdViewIndexImport } from './routes/admin/resident/$residentId/_view/index'
import { Route as AdminResidentResidentIdViewNoticeReceivedImport } from './routes/admin/resident/$residentId/_view/notice-received'
import { Route as AdminResidentResidentIdViewInquiresHistoryImport } from './routes/admin/resident/$residentId/_view/inquires-history'

// Create Virtual Routes

const ResidentRouteLazyImport = createFileRoute('/resident')()
const AdminFinancialImport = createFileRoute('/admin/financial')()
const ResidentUploadPaymentLazyImport = createFileRoute(
  '/resident/upload-payment',
)()
const ResidentProfileLazyImport = createFileRoute('/resident/profile')()
const ResidentPaynowLazyImport = createFileRoute('/resident/paynow')()
const ResidentNoticesLazyImport = createFileRoute('/resident/notices')()
const ResidentInquiriesLazyImport = createFileRoute('/resident/inquiries')()
const ResidentFinancialLazyImport = createFileRoute('/resident/financial')()
const ResidentEditProfileLazyImport = createFileRoute(
  '/resident/edit-profile',
)()
const ResidentDashboardLazyImport = createFileRoute('/resident/dashboard')()
const ResidentAccountLazyImport = createFileRoute('/resident/account')()

// Create/Update Routes

const ResidentRouteLazyRoute = ResidentRouteLazyImport.update({
  id: '/resident',
  path: '/resident',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/resident/route.lazy').then((d) => d.Route),
)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AdminRouteRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AdminFinancialRoute = AdminFinancialImport.update({
  id: '/financial',
  path: '/financial',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRouteRoute,
} as any)

const ResidentUploadPaymentLazyRoute = ResidentUploadPaymentLazyImport.update({
  id: '/upload-payment',
  path: '/upload-payment',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/upload-payment.lazy').then((d) => d.Route),
)

const ResidentProfileLazyRoute = ResidentProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/profile.lazy').then((d) => d.Route),
)

const ResidentPaynowLazyRoute = ResidentPaynowLazyImport.update({
  id: '/paynow',
  path: '/paynow',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/paynow.lazy').then((d) => d.Route),
)

const ResidentNoticesLazyRoute = ResidentNoticesLazyImport.update({
  id: '/notices',
  path: '/notices',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/notices.lazy').then((d) => d.Route),
)

const ResidentInquiriesLazyRoute = ResidentInquiriesLazyImport.update({
  id: '/inquiries',
  path: '/inquiries',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/inquiries.lazy').then((d) => d.Route),
)

const ResidentFinancialLazyRoute = ResidentFinancialLazyImport.update({
  id: '/financial',
  path: '/financial',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/financial.lazy').then((d) => d.Route),
)

const ResidentEditProfileLazyRoute = ResidentEditProfileLazyImport.update({
  id: '/edit-profile',
  path: '/edit-profile',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/edit-profile.lazy').then((d) => d.Route),
)

const ResidentDashboardLazyRoute = ResidentDashboardLazyImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/dashboard.lazy').then((d) => d.Route),
)

const ResidentAccountLazyRoute = ResidentAccountLazyImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/resident/account.lazy').then((d) => d.Route),
)

const ResidentSubmitRequestRoute = ResidentSubmitRequestImport.update({
  id: '/submit-request',
  path: '/submit-request',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any)

const ResidentContactRoute = ResidentContactImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => ResidentRouteLazyRoute,
} as any)

const AdminUnpaidAccountsRoute = AdminUnpaidAccountsImport.update({
  id: '/unpaid-accounts',
  path: '/unpaid-accounts',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminProfileRoute = AdminProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminNotificationsRoute = AdminNotificationsImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminEmployeesRoute = AdminEmployeesImport.update({
  id: '/employees',
  path: '/employees',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminEditProfileRoute = AdminEditProfileImport.update({
  id: '/edit-profile',
  path: '/edit-profile',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAddResidentRoute = AdminAddResidentImport.update({
  id: '/add-resident',
  path: '/add-resident',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminAccountRoute = AdminAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AuthDashboardRoute = AuthDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AdminResidentRouteRoute = AdminResidentRouteImport.update({
  id: '/resident',
  path: '/resident',
  getParentRoute: () => AdminRouteRoute,
} as any)

const AdminResidentIndexRoute = AdminResidentIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminResidentRouteRoute,
} as any)

const AdminResidentAddResidentRoute = AdminResidentAddResidentImport.update({
  id: '/add-resident',
  path: '/add-resident',
  getParentRoute: () => AdminResidentRouteRoute,
} as any)

const AdminFinancialFinancialRoute = AdminFinancialFinancialImport.update({
  id: '/_financial',
  getParentRoute: () => AdminFinancialRoute,
} as any)

const AdminResidentResidentIdRouteRoute =
  AdminResidentResidentIdRouteImport.update({
    id: '/$residentId',
    path: '/$residentId',
    getParentRoute: () => AdminResidentRouteRoute,
  } as any)

const AdminResidentResidentIdEditRoute =
  AdminResidentResidentIdEditImport.update({
    id: '/edit',
    path: '/edit',
    getParentRoute: () => AdminResidentResidentIdRouteRoute,
  } as any)

const AdminFinancialFinancialRecordsRoute =
  AdminFinancialFinancialRecordsImport.update({
    id: '/records',
    path: '/records',
    getParentRoute: () => AdminFinancialFinancialRoute,
  } as any)

const AdminFinancialFinancialMonthlyDueRoute =
  AdminFinancialFinancialMonthlyDueImport.update({
    id: '/monthly-due',
    path: '/monthly-due',
    getParentRoute: () => AdminFinancialFinancialRoute,
  } as any)

const AdminResidentResidentIdViewRouteRoute =
  AdminResidentResidentIdViewRouteImport.update({
    id: '/_view',
    getParentRoute: () => AdminResidentResidentIdRouteRoute,
  } as any)

const AdminResidentResidentIdViewIndexRoute =
  AdminResidentResidentIdViewIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AdminResidentResidentIdViewRouteRoute,
  } as any)

const AdminResidentResidentIdViewNoticeReceivedRoute =
  AdminResidentResidentIdViewNoticeReceivedImport.update({
    id: '/notice-received',
    path: '/notice-received',
    getParentRoute: () => AdminResidentResidentIdViewRouteRoute,
  } as any)

const AdminResidentResidentIdViewInquiresHistoryRoute =
  AdminResidentResidentIdViewInquiresHistoryImport.update({
    id: '/inquires-history',
    path: '/inquires-history',
    getParentRoute: () => AdminResidentResidentIdViewRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRouteImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/resident': {
      id: '/resident'
      path: '/resident'
      fullPath: '/resident'
      preLoaderRoute: typeof ResidentRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/admin/resident': {
      id: '/admin/resident'
      path: '/resident'
      fullPath: '/admin/resident'
      preLoaderRoute: typeof AdminResidentRouteImport
      parentRoute: typeof AdminRouteImport
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardImport
      parentRoute: typeof AuthRouteImport
    }
    '/admin/account': {
      id: '/admin/account'
      path: '/account'
      fullPath: '/admin/account'
      preLoaderRoute: typeof AdminAccountImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/add-resident': {
      id: '/admin/add-resident'
      path: '/add-resident'
      fullPath: '/admin/add-resident'
      preLoaderRoute: typeof AdminAddResidentImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/edit-profile': {
      id: '/admin/edit-profile'
      path: '/edit-profile'
      fullPath: '/admin/edit-profile'
      preLoaderRoute: typeof AdminEditProfileImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/employees': {
      id: '/admin/employees'
      path: '/employees'
      fullPath: '/admin/employees'
      preLoaderRoute: typeof AdminEmployeesImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/notifications': {
      id: '/admin/notifications'
      path: '/notifications'
      fullPath: '/admin/notifications'
      preLoaderRoute: typeof AdminNotificationsImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/profile': {
      id: '/admin/profile'
      path: '/profile'
      fullPath: '/admin/profile'
      preLoaderRoute: typeof AdminProfileImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/unpaid-accounts': {
      id: '/admin/unpaid-accounts'
      path: '/unpaid-accounts'
      fullPath: '/admin/unpaid-accounts'
      preLoaderRoute: typeof AdminUnpaidAccountsImport
      parentRoute: typeof AdminRouteImport
    }
    '/resident/contact': {
      id: '/resident/contact'
      path: '/contact'
      fullPath: '/resident/contact'
      preLoaderRoute: typeof ResidentContactImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/submit-request': {
      id: '/resident/submit-request'
      path: '/submit-request'
      fullPath: '/resident/submit-request'
      preLoaderRoute: typeof ResidentSubmitRequestImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/account': {
      id: '/resident/account'
      path: '/account'
      fullPath: '/resident/account'
      preLoaderRoute: typeof ResidentAccountLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/dashboard': {
      id: '/resident/dashboard'
      path: '/dashboard'
      fullPath: '/resident/dashboard'
      preLoaderRoute: typeof ResidentDashboardLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/edit-profile': {
      id: '/resident/edit-profile'
      path: '/edit-profile'
      fullPath: '/resident/edit-profile'
      preLoaderRoute: typeof ResidentEditProfileLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/financial': {
      id: '/resident/financial'
      path: '/financial'
      fullPath: '/resident/financial'
      preLoaderRoute: typeof ResidentFinancialLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/inquiries': {
      id: '/resident/inquiries'
      path: '/inquiries'
      fullPath: '/resident/inquiries'
      preLoaderRoute: typeof ResidentInquiriesLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/notices': {
      id: '/resident/notices'
      path: '/notices'
      fullPath: '/resident/notices'
      preLoaderRoute: typeof ResidentNoticesLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/paynow': {
      id: '/resident/paynow'
      path: '/paynow'
      fullPath: '/resident/paynow'
      preLoaderRoute: typeof ResidentPaynowLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/profile': {
      id: '/resident/profile'
      path: '/profile'
      fullPath: '/resident/profile'
      preLoaderRoute: typeof ResidentProfileLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/resident/upload-payment': {
      id: '/resident/upload-payment'
      path: '/upload-payment'
      fullPath: '/resident/upload-payment'
      preLoaderRoute: typeof ResidentUploadPaymentLazyImport
      parentRoute: typeof ResidentRouteLazyImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/resident/$residentId': {
      id: '/admin/resident/$residentId'
      path: '/$residentId'
      fullPath: '/admin/resident/$residentId'
      preLoaderRoute: typeof AdminResidentResidentIdRouteImport
      parentRoute: typeof AdminResidentRouteImport
    }
    '/admin/financial': {
      id: '/admin/financial'
      path: '/financial'
      fullPath: '/admin/financial'
      preLoaderRoute: typeof AdminFinancialImport
      parentRoute: typeof AdminRouteImport
    }
    '/admin/financial/_financial': {
      id: '/admin/financial/_financial'
      path: '/financial'
      fullPath: '/admin/financial'
      preLoaderRoute: typeof AdminFinancialFinancialImport
      parentRoute: typeof AdminFinancialRoute
    }
    '/admin/resident/add-resident': {
      id: '/admin/resident/add-resident'
      path: '/add-resident'
      fullPath: '/admin/resident/add-resident'
      preLoaderRoute: typeof AdminResidentAddResidentImport
      parentRoute: typeof AdminResidentRouteImport
    }
    '/admin/resident/': {
      id: '/admin/resident/'
      path: '/'
      fullPath: '/admin/resident/'
      preLoaderRoute: typeof AdminResidentIndexImport
      parentRoute: typeof AdminResidentRouteImport
    }
    '/admin/resident/$residentId/_view': {
      id: '/admin/resident/$residentId/_view'
      path: ''
      fullPath: '/admin/resident/$residentId'
      preLoaderRoute: typeof AdminResidentResidentIdViewRouteImport
      parentRoute: typeof AdminResidentResidentIdRouteImport
    }
    '/admin/financial/_financial/monthly-due': {
      id: '/admin/financial/_financial/monthly-due'
      path: '/monthly-due'
      fullPath: '/admin/financial/monthly-due'
      preLoaderRoute: typeof AdminFinancialFinancialMonthlyDueImport
      parentRoute: typeof AdminFinancialFinancialImport
    }
    '/admin/financial/_financial/records': {
      id: '/admin/financial/_financial/records'
      path: '/records'
      fullPath: '/admin/financial/records'
      preLoaderRoute: typeof AdminFinancialFinancialRecordsImport
      parentRoute: typeof AdminFinancialFinancialImport
    }
    '/admin/resident/$residentId/edit': {
      id: '/admin/resident/$residentId/edit'
      path: '/edit'
      fullPath: '/admin/resident/$residentId/edit'
      preLoaderRoute: typeof AdminResidentResidentIdEditImport
      parentRoute: typeof AdminResidentResidentIdRouteImport
    }
    '/admin/resident/$residentId/_view/inquires-history': {
      id: '/admin/resident/$residentId/_view/inquires-history'
      path: '/inquires-history'
      fullPath: '/admin/resident/$residentId/inquires-history'
      preLoaderRoute: typeof AdminResidentResidentIdViewInquiresHistoryImport
      parentRoute: typeof AdminResidentResidentIdViewRouteImport
    }
    '/admin/resident/$residentId/_view/notice-received': {
      id: '/admin/resident/$residentId/_view/notice-received'
      path: '/notice-received'
      fullPath: '/admin/resident/$residentId/notice-received'
      preLoaderRoute: typeof AdminResidentResidentIdViewNoticeReceivedImport
      parentRoute: typeof AdminResidentResidentIdViewRouteImport
    }
    '/admin/resident/$residentId/_view/': {
      id: '/admin/resident/$residentId/_view/'
      path: '/'
      fullPath: '/admin/resident/$residentId/'
      preLoaderRoute: typeof AdminResidentResidentIdViewIndexImport
      parentRoute: typeof AdminResidentResidentIdViewRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthDashboardRoute: typeof AuthDashboardRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthDashboardRoute: AuthDashboardRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface AdminResidentResidentIdViewRouteRouteChildren {
  AdminResidentResidentIdViewInquiresHistoryRoute: typeof AdminResidentResidentIdViewInquiresHistoryRoute
  AdminResidentResidentIdViewNoticeReceivedRoute: typeof AdminResidentResidentIdViewNoticeReceivedRoute
  AdminResidentResidentIdViewIndexRoute: typeof AdminResidentResidentIdViewIndexRoute
}

const AdminResidentResidentIdViewRouteRouteChildren: AdminResidentResidentIdViewRouteRouteChildren =
  {
    AdminResidentResidentIdViewInquiresHistoryRoute:
      AdminResidentResidentIdViewInquiresHistoryRoute,
    AdminResidentResidentIdViewNoticeReceivedRoute:
      AdminResidentResidentIdViewNoticeReceivedRoute,
    AdminResidentResidentIdViewIndexRoute:
      AdminResidentResidentIdViewIndexRoute,
  }

const AdminResidentResidentIdViewRouteRouteWithChildren =
  AdminResidentResidentIdViewRouteRoute._addFileChildren(
    AdminResidentResidentIdViewRouteRouteChildren,
  )

interface AdminResidentResidentIdRouteRouteChildren {
  AdminResidentResidentIdViewRouteRoute: typeof AdminResidentResidentIdViewRouteRouteWithChildren
  AdminResidentResidentIdEditRoute: typeof AdminResidentResidentIdEditRoute
}

const AdminResidentResidentIdRouteRouteChildren: AdminResidentResidentIdRouteRouteChildren =
  {
    AdminResidentResidentIdViewRouteRoute:
      AdminResidentResidentIdViewRouteRouteWithChildren,
    AdminResidentResidentIdEditRoute: AdminResidentResidentIdEditRoute,
  }

const AdminResidentResidentIdRouteRouteWithChildren =
  AdminResidentResidentIdRouteRoute._addFileChildren(
    AdminResidentResidentIdRouteRouteChildren,
  )

interface AdminResidentRouteRouteChildren {
  AdminResidentResidentIdRouteRoute: typeof AdminResidentResidentIdRouteRouteWithChildren
  AdminResidentAddResidentRoute: typeof AdminResidentAddResidentRoute
  AdminResidentIndexRoute: typeof AdminResidentIndexRoute
}

const AdminResidentRouteRouteChildren: AdminResidentRouteRouteChildren = {
  AdminResidentResidentIdRouteRoute:
    AdminResidentResidentIdRouteRouteWithChildren,
  AdminResidentAddResidentRoute: AdminResidentAddResidentRoute,
  AdminResidentIndexRoute: AdminResidentIndexRoute,
}

const AdminResidentRouteRouteWithChildren =
  AdminResidentRouteRoute._addFileChildren(AdminResidentRouteRouteChildren)

interface AdminFinancialFinancialRouteChildren {
  AdminFinancialFinancialMonthlyDueRoute: typeof AdminFinancialFinancialMonthlyDueRoute
  AdminFinancialFinancialRecordsRoute: typeof AdminFinancialFinancialRecordsRoute
}

const AdminFinancialFinancialRouteChildren: AdminFinancialFinancialRouteChildren =
  {
    AdminFinancialFinancialMonthlyDueRoute:
      AdminFinancialFinancialMonthlyDueRoute,
    AdminFinancialFinancialRecordsRoute: AdminFinancialFinancialRecordsRoute,
  }

const AdminFinancialFinancialRouteWithChildren =
  AdminFinancialFinancialRoute._addFileChildren(
    AdminFinancialFinancialRouteChildren,
  )

interface AdminFinancialRouteChildren {
  AdminFinancialFinancialRoute: typeof AdminFinancialFinancialRouteWithChildren
}

const AdminFinancialRouteChildren: AdminFinancialRouteChildren = {
  AdminFinancialFinancialRoute: AdminFinancialFinancialRouteWithChildren,
}

const AdminFinancialRouteWithChildren = AdminFinancialRoute._addFileChildren(
  AdminFinancialRouteChildren,
)

interface AdminRouteRouteChildren {
  AdminResidentRouteRoute: typeof AdminResidentRouteRouteWithChildren
  AdminAccountRoute: typeof AdminAccountRoute
  AdminAddResidentRoute: typeof AdminAddResidentRoute
  AdminEditProfileRoute: typeof AdminEditProfileRoute
  AdminEmployeesRoute: typeof AdminEmployeesRoute
  AdminNotificationsRoute: typeof AdminNotificationsRoute
  AdminProfileRoute: typeof AdminProfileRoute
  AdminUnpaidAccountsRoute: typeof AdminUnpaidAccountsRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AdminFinancialRoute: typeof AdminFinancialRouteWithChildren
}

const AdminRouteRouteChildren: AdminRouteRouteChildren = {
  AdminResidentRouteRoute: AdminResidentRouteRouteWithChildren,
  AdminAccountRoute: AdminAccountRoute,
  AdminAddResidentRoute: AdminAddResidentRoute,
  AdminEditProfileRoute: AdminEditProfileRoute,
  AdminEmployeesRoute: AdminEmployeesRoute,
  AdminNotificationsRoute: AdminNotificationsRoute,
  AdminProfileRoute: AdminProfileRoute,
  AdminUnpaidAccountsRoute: AdminUnpaidAccountsRoute,
  AdminIndexRoute: AdminIndexRoute,
  AdminFinancialRoute: AdminFinancialRouteWithChildren,
}

const AdminRouteRouteWithChildren = AdminRouteRoute._addFileChildren(
  AdminRouteRouteChildren,
)

interface ResidentRouteLazyRouteChildren {
  ResidentContactRoute: typeof ResidentContactRoute
  ResidentSubmitRequestRoute: typeof ResidentSubmitRequestRoute
  ResidentAccountLazyRoute: typeof ResidentAccountLazyRoute
  ResidentDashboardLazyRoute: typeof ResidentDashboardLazyRoute
  ResidentEditProfileLazyRoute: typeof ResidentEditProfileLazyRoute
  ResidentFinancialLazyRoute: typeof ResidentFinancialLazyRoute
  ResidentInquiriesLazyRoute: typeof ResidentInquiriesLazyRoute
  ResidentNoticesLazyRoute: typeof ResidentNoticesLazyRoute
  ResidentPaynowLazyRoute: typeof ResidentPaynowLazyRoute
  ResidentProfileLazyRoute: typeof ResidentProfileLazyRoute
  ResidentUploadPaymentLazyRoute: typeof ResidentUploadPaymentLazyRoute
}

const ResidentRouteLazyRouteChildren: ResidentRouteLazyRouteChildren = {
  ResidentContactRoute: ResidentContactRoute,
  ResidentSubmitRequestRoute: ResidentSubmitRequestRoute,
  ResidentAccountLazyRoute: ResidentAccountLazyRoute,
  ResidentDashboardLazyRoute: ResidentDashboardLazyRoute,
  ResidentEditProfileLazyRoute: ResidentEditProfileLazyRoute,
  ResidentFinancialLazyRoute: ResidentFinancialLazyRoute,
  ResidentInquiriesLazyRoute: ResidentInquiriesLazyRoute,
  ResidentNoticesLazyRoute: ResidentNoticesLazyRoute,
  ResidentPaynowLazyRoute: ResidentPaynowLazyRoute,
  ResidentProfileLazyRoute: ResidentProfileLazyRoute,
  ResidentUploadPaymentLazyRoute: ResidentUploadPaymentLazyRoute,
}

const ResidentRouteLazyRouteWithChildren =
  ResidentRouteLazyRoute._addFileChildren(ResidentRouteLazyRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/resident': typeof ResidentRouteLazyRouteWithChildren
  '/admin/resident': typeof AdminResidentRouteRouteWithChildren
  '/dashboard': typeof AuthDashboardRoute
  '/admin/account': typeof AdminAccountRoute
  '/admin/add-resident': typeof AdminAddResidentRoute
  '/admin/edit-profile': typeof AdminEditProfileRoute
  '/admin/employees': typeof AdminEmployeesRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/profile': typeof AdminProfileRoute
  '/admin/unpaid-accounts': typeof AdminUnpaidAccountsRoute
  '/resident/contact': typeof ResidentContactRoute
  '/resident/submit-request': typeof ResidentSubmitRequestRoute
  '/resident/account': typeof ResidentAccountLazyRoute
  '/resident/dashboard': typeof ResidentDashboardLazyRoute
  '/resident/edit-profile': typeof ResidentEditProfileLazyRoute
  '/resident/financial': typeof ResidentFinancialLazyRoute
  '/resident/inquiries': typeof ResidentInquiriesLazyRoute
  '/resident/notices': typeof ResidentNoticesLazyRoute
  '/resident/paynow': typeof ResidentPaynowLazyRoute
  '/resident/profile': typeof ResidentProfileLazyRoute
  '/resident/upload-payment': typeof ResidentUploadPaymentLazyRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/resident/$residentId': typeof AdminResidentResidentIdViewRouteRouteWithChildren
  '/admin/financial': typeof AdminFinancialFinancialRouteWithChildren
  '/admin/resident/add-resident': typeof AdminResidentAddResidentRoute
  '/admin/resident/': typeof AdminResidentIndexRoute
  '/admin/financial/monthly-due': typeof AdminFinancialFinancialMonthlyDueRoute
  '/admin/financial/records': typeof AdminFinancialFinancialRecordsRoute
  '/admin/resident/$residentId/edit': typeof AdminResidentResidentIdEditRoute
  '/admin/resident/$residentId/inquires-history': typeof AdminResidentResidentIdViewInquiresHistoryRoute
  '/admin/resident/$residentId/notice-received': typeof AdminResidentResidentIdViewNoticeReceivedRoute
  '/admin/resident/$residentId/': typeof AdminResidentResidentIdViewIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/resident': typeof ResidentRouteLazyRouteWithChildren
  '/dashboard': typeof AuthDashboardRoute
  '/admin/account': typeof AdminAccountRoute
  '/admin/add-resident': typeof AdminAddResidentRoute
  '/admin/edit-profile': typeof AdminEditProfileRoute
  '/admin/employees': typeof AdminEmployeesRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/profile': typeof AdminProfileRoute
  '/admin/unpaid-accounts': typeof AdminUnpaidAccountsRoute
  '/resident/contact': typeof ResidentContactRoute
  '/resident/submit-request': typeof ResidentSubmitRequestRoute
  '/resident/account': typeof ResidentAccountLazyRoute
  '/resident/dashboard': typeof ResidentDashboardLazyRoute
  '/resident/edit-profile': typeof ResidentEditProfileLazyRoute
  '/resident/financial': typeof ResidentFinancialLazyRoute
  '/resident/inquiries': typeof ResidentInquiriesLazyRoute
  '/resident/notices': typeof ResidentNoticesLazyRoute
  '/resident/paynow': typeof ResidentPaynowLazyRoute
  '/resident/profile': typeof ResidentProfileLazyRoute
  '/resident/upload-payment': typeof ResidentUploadPaymentLazyRoute
  '/admin': typeof AdminIndexRoute
  '/admin/resident/$residentId': typeof AdminResidentResidentIdViewIndexRoute
  '/admin/financial': typeof AdminFinancialFinancialRouteWithChildren
  '/admin/resident/add-resident': typeof AdminResidentAddResidentRoute
  '/admin/resident': typeof AdminResidentIndexRoute
  '/admin/financial/monthly-due': typeof AdminFinancialFinancialMonthlyDueRoute
  '/admin/financial/records': typeof AdminFinancialFinancialRecordsRoute
  '/admin/resident/$residentId/edit': typeof AdminResidentResidentIdEditRoute
  '/admin/resident/$residentId/inquires-history': typeof AdminResidentResidentIdViewInquiresHistoryRoute
  '/admin/resident/$residentId/notice-received': typeof AdminResidentResidentIdViewNoticeReceivedRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/admin': typeof AdminRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/resident': typeof ResidentRouteLazyRouteWithChildren
  '/admin/resident': typeof AdminResidentRouteRouteWithChildren
  '/_auth/dashboard': typeof AuthDashboardRoute
  '/admin/account': typeof AdminAccountRoute
  '/admin/add-resident': typeof AdminAddResidentRoute
  '/admin/edit-profile': typeof AdminEditProfileRoute
  '/admin/employees': typeof AdminEmployeesRoute
  '/admin/notifications': typeof AdminNotificationsRoute
  '/admin/profile': typeof AdminProfileRoute
  '/admin/unpaid-accounts': typeof AdminUnpaidAccountsRoute
  '/resident/contact': typeof ResidentContactRoute
  '/resident/submit-request': typeof ResidentSubmitRequestRoute
  '/resident/account': typeof ResidentAccountLazyRoute
  '/resident/dashboard': typeof ResidentDashboardLazyRoute
  '/resident/edit-profile': typeof ResidentEditProfileLazyRoute
  '/resident/financial': typeof ResidentFinancialLazyRoute
  '/resident/inquiries': typeof ResidentInquiriesLazyRoute
  '/resident/notices': typeof ResidentNoticesLazyRoute
  '/resident/paynow': typeof ResidentPaynowLazyRoute
  '/resident/profile': typeof ResidentProfileLazyRoute
  '/resident/upload-payment': typeof ResidentUploadPaymentLazyRoute
  '/admin/': typeof AdminIndexRoute
  '/admin/resident/$residentId': typeof AdminResidentResidentIdRouteRouteWithChildren
  '/admin/financial': typeof AdminFinancialRouteWithChildren
  '/admin/financial/_financial': typeof AdminFinancialFinancialRouteWithChildren
  '/admin/resident/add-resident': typeof AdminResidentAddResidentRoute
  '/admin/resident/': typeof AdminResidentIndexRoute
  '/admin/resident/$residentId/_view': typeof AdminResidentResidentIdViewRouteRouteWithChildren
  '/admin/financial/_financial/monthly-due': typeof AdminFinancialFinancialMonthlyDueRoute
  '/admin/financial/_financial/records': typeof AdminFinancialFinancialRecordsRoute
  '/admin/resident/$residentId/edit': typeof AdminResidentResidentIdEditRoute
  '/admin/resident/$residentId/_view/inquires-history': typeof AdminResidentResidentIdViewInquiresHistoryRoute
  '/admin/resident/$residentId/_view/notice-received': typeof AdminResidentResidentIdViewNoticeReceivedRoute
  '/admin/resident/$residentId/_view/': typeof AdminResidentResidentIdViewIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/admin'
    | '/login'
    | '/resident'
    | '/admin/resident'
    | '/dashboard'
    | '/admin/account'
    | '/admin/add-resident'
    | '/admin/edit-profile'
    | '/admin/employees'
    | '/admin/notifications'
    | '/admin/profile'
    | '/admin/unpaid-accounts'
    | '/resident/contact'
    | '/resident/submit-request'
    | '/resident/account'
    | '/resident/dashboard'
    | '/resident/edit-profile'
    | '/resident/financial'
    | '/resident/inquiries'
    | '/resident/notices'
    | '/resident/paynow'
    | '/resident/profile'
    | '/resident/upload-payment'
    | '/admin/'
    | '/admin/resident/$residentId'
    | '/admin/financial'
    | '/admin/resident/add-resident'
    | '/admin/resident/'
    | '/admin/financial/monthly-due'
    | '/admin/financial/records'
    | '/admin/resident/$residentId/edit'
    | '/admin/resident/$residentId/inquires-history'
    | '/admin/resident/$residentId/notice-received'
    | '/admin/resident/$residentId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/resident'
    | '/dashboard'
    | '/admin/account'
    | '/admin/add-resident'
    | '/admin/edit-profile'
    | '/admin/employees'
    | '/admin/notifications'
    | '/admin/profile'
    | '/admin/unpaid-accounts'
    | '/resident/contact'
    | '/resident/submit-request'
    | '/resident/account'
    | '/resident/dashboard'
    | '/resident/edit-profile'
    | '/resident/financial'
    | '/resident/inquiries'
    | '/resident/notices'
    | '/resident/paynow'
    | '/resident/profile'
    | '/resident/upload-payment'
    | '/admin'
    | '/admin/resident/$residentId'
    | '/admin/financial'
    | '/admin/resident/add-resident'
    | '/admin/resident'
    | '/admin/financial/monthly-due'
    | '/admin/financial/records'
    | '/admin/resident/$residentId/edit'
    | '/admin/resident/$residentId/inquires-history'
    | '/admin/resident/$residentId/notice-received'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/admin'
    | '/login'
    | '/resident'
    | '/admin/resident'
    | '/_auth/dashboard'
    | '/admin/account'
    | '/admin/add-resident'
    | '/admin/edit-profile'
    | '/admin/employees'
    | '/admin/notifications'
    | '/admin/profile'
    | '/admin/unpaid-accounts'
    | '/resident/contact'
    | '/resident/submit-request'
    | '/resident/account'
    | '/resident/dashboard'
    | '/resident/edit-profile'
    | '/resident/financial'
    | '/resident/inquiries'
    | '/resident/notices'
    | '/resident/paynow'
    | '/resident/profile'
    | '/resident/upload-payment'
    | '/admin/'
    | '/admin/resident/$residentId'
    | '/admin/financial'
    | '/admin/financial/_financial'
    | '/admin/resident/add-resident'
    | '/admin/resident/'
    | '/admin/resident/$residentId/_view'
    | '/admin/financial/_financial/monthly-due'
    | '/admin/financial/_financial/records'
    | '/admin/resident/$residentId/edit'
    | '/admin/resident/$residentId/_view/inquires-history'
    | '/admin/resident/$residentId/_view/notice-received'
    | '/admin/resident/$residentId/_view/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  AdminRouteRoute: typeof AdminRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
  ResidentRouteLazyRoute: typeof ResidentRouteLazyRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  AdminRouteRoute: AdminRouteRouteWithChildren,
  LoginRoute: LoginRoute,
  ResidentRouteLazyRoute: ResidentRouteLazyRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/admin",
        "/login",
        "/resident"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/dashboard"
      ]
    },
    "/admin": {
      "filePath": "admin/route.tsx",
      "children": [
        "/admin/resident",
        "/admin/account",
        "/admin/add-resident",
        "/admin/edit-profile",
        "/admin/employees",
        "/admin/notifications",
        "/admin/profile",
        "/admin/unpaid-accounts",
        "/admin/",
        "/admin/financial"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/resident": {
      "filePath": "resident/route.lazy.tsx",
      "children": [
        "/resident/contact",
        "/resident/submit-request",
        "/resident/account",
        "/resident/dashboard",
        "/resident/edit-profile",
        "/resident/financial",
        "/resident/inquiries",
        "/resident/notices",
        "/resident/paynow",
        "/resident/profile",
        "/resident/upload-payment"
      ]
    },
    "/admin/resident": {
      "filePath": "admin/resident/route.tsx",
      "parent": "/admin",
      "children": [
        "/admin/resident/$residentId",
        "/admin/resident/add-resident",
        "/admin/resident/"
      ]
    },
    "/_auth/dashboard": {
      "filePath": "_auth/dashboard.tsx",
      "parent": "/_auth"
    },
    "/admin/account": {
      "filePath": "admin/account.tsx",
      "parent": "/admin"
    },
    "/admin/add-resident": {
      "filePath": "admin/add-resident.tsx",
      "parent": "/admin"
    },
    "/admin/edit-profile": {
      "filePath": "admin/edit-profile.tsx",
      "parent": "/admin"
    },
    "/admin/employees": {
      "filePath": "admin/employees.tsx",
      "parent": "/admin"
    },
    "/admin/notifications": {
      "filePath": "admin/notifications.tsx",
      "parent": "/admin"
    },
    "/admin/profile": {
      "filePath": "admin/profile.tsx",
      "parent": "/admin"
    },
    "/admin/unpaid-accounts": {
      "filePath": "admin/unpaid-accounts.tsx",
      "parent": "/admin"
    },
    "/resident/contact": {
      "filePath": "resident/contact.tsx",
      "parent": "/resident"
    },
    "/resident/submit-request": {
      "filePath": "resident/submit-request.tsx",
      "parent": "/resident"
    },
    "/resident/account": {
      "filePath": "resident/account.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/dashboard": {
      "filePath": "resident/dashboard.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/edit-profile": {
      "filePath": "resident/edit-profile.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/financial": {
      "filePath": "resident/financial.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/inquiries": {
      "filePath": "resident/inquiries.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/notices": {
      "filePath": "resident/notices.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/paynow": {
      "filePath": "resident/paynow.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/profile": {
      "filePath": "resident/profile.lazy.tsx",
      "parent": "/resident"
    },
    "/resident/upload-payment": {
      "filePath": "resident/upload-payment.lazy.tsx",
      "parent": "/resident"
    },
    "/admin/": {
      "filePath": "admin/index.tsx",
      "parent": "/admin"
    },
    "/admin/resident/$residentId": {
      "filePath": "admin/resident/$residentId/route.tsx",
      "parent": "/admin/resident",
      "children": [
        "/admin/resident/$residentId/_view",
        "/admin/resident/$residentId/edit"
      ]
    },
    "/admin/financial": {
      "filePath": "admin/financial",
      "parent": "/admin",
      "children": [
        "/admin/financial/_financial"
      ]
    },
    "/admin/financial/_financial": {
      "filePath": "admin/financial/_financial.tsx",
      "parent": "/admin/financial",
      "children": [
        "/admin/financial/_financial/monthly-due",
        "/admin/financial/_financial/records"
      ]
    },
    "/admin/resident/add-resident": {
      "filePath": "admin/resident/add-resident.tsx",
      "parent": "/admin/resident"
    },
    "/admin/resident/": {
      "filePath": "admin/resident/index.tsx",
      "parent": "/admin/resident"
    },
    "/admin/resident/$residentId/_view": {
      "filePath": "admin/resident/$residentId/_view/route.tsx",
      "parent": "/admin/resident/$residentId",
      "children": [
        "/admin/resident/$residentId/_view/inquires-history",
        "/admin/resident/$residentId/_view/notice-received",
        "/admin/resident/$residentId/_view/"
      ]
    },
    "/admin/financial/_financial/monthly-due": {
      "filePath": "admin/financial/_financial.monthly-due.tsx",
      "parent": "/admin/financial/_financial"
    },
    "/admin/financial/_financial/records": {
      "filePath": "admin/financial/_financial.records.tsx",
      "parent": "/admin/financial/_financial"
    },
    "/admin/resident/$residentId/edit": {
      "filePath": "admin/resident/$residentId/edit.tsx",
      "parent": "/admin/resident/$residentId"
    },
    "/admin/resident/$residentId/_view/inquires-history": {
      "filePath": "admin/resident/$residentId/_view/inquires-history.tsx",
      "parent": "/admin/resident/$residentId/_view"
    },
    "/admin/resident/$residentId/_view/notice-received": {
      "filePath": "admin/resident/$residentId/_view/notice-received.tsx",
      "parent": "/admin/resident/$residentId/_view"
    },
    "/admin/resident/$residentId/_view/": {
      "filePath": "admin/resident/$residentId/_view/index.tsx",
      "parent": "/admin/resident/$residentId/_view"
    }
  }
}
ROUTE_MANIFEST_END */
